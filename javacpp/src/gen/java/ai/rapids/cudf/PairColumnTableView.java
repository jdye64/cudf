// Targeted by JavaCPP version 1.5.4: DO NOT EDIT THIS FILE

package ai.rapids.cudf;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;

import static ai.rapids.cudf.global.cudf.*;

@NoOffset @Name("std::pair<std::unique_ptr<column>,table_view>") @Properties(inherit = ai.rapids.cudf.presets.cudf.class)
public class PairColumnTableView extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public PairColumnTableView(Pointer p) { super(p); }
    public PairColumnTableView(@Cast({"", "std::unique_ptr<column>"}) column firstValue, table_view secondValue) { this(); put(firstValue, secondValue); }
    public PairColumnTableView()       { allocate();  }
    private native void allocate();
    public native @Name("operator =") @ByRef PairColumnTableView put(@ByRef PairColumnTableView x);


    @MemberGetter public native @UniquePtr @Cast({"", "std::unique_ptr<column>"}) column first(); public native PairColumnTableView first(column first);
    @MemberGetter public native @ByRef table_view second();  public native PairColumnTableView second(table_view second);

    public PairColumnTableView put(column firstValue, table_view secondValue) {
        first(firstValue);
        second(secondValue);
        return this;
    }
}

