// Targeted by JavaCPP version 1.5.4: DO NOT EDIT THIS FILE

package ai.rapids.cudf;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static ai.rapids.cudf.global.cudf.*;


/** \} */  // end of group

/**
 * \addtogroup interop_arrow
 * \{
 * \file
 */

/**
 * \brief Detailed meta data information for arrow array.
 *
 * As of now this contains only name in the hierarchy of children of cudf column,
 * but in future this can be updated as per requirement.
 */
@Namespace("cudf") @NoOffset @Properties(inherit = ai.rapids.cudf.presets.Cudf.class)
public class column_metadata extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public column_metadata(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public column_metadata(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public column_metadata position(long position) {
        return (column_metadata)super.position(position);
    }
    @Override public column_metadata getPointer(long i) {
        return new column_metadata(this).position(position + i);
    }

  public native @StdString BytePointer name(); public native column_metadata name(BytePointer setter);
  public native @StdVector column_metadata children_meta(); public native column_metadata children_meta(column_metadata setter);

  public column_metadata(@StdString BytePointer _name) { super((Pointer)null); allocate(_name); }
  private native void allocate(@StdString BytePointer _name);
  public column_metadata(@StdString String _name) { super((Pointer)null); allocate(_name); }
  private native void allocate(@StdString String _name);
  public column_metadata() { super((Pointer)null); allocate(); }
  private native void allocate();
}
